@model MDM.WebPortal.Models.FromDB.CollNoteTypeCatPriority

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<div class="container">
    <h2 class="section-title">Create</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ActionCode</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CollNoteType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CollNoteType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CollNoteType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CollNoteCat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownListFor(model => model.CollNoteCat, (IEnumerable<SelectListItem>)(new[] {
                                new SelectListItem() { Value = "Enrollment", Text = "Enrollment" },
                                new SelectListItem() { Value = "Informational", Text = "Informational" },
                                new SelectListItem() { Value = "InsDispute", Text = "InsDispute" },
                                new SelectListItem() { Value = "PaidPending", Text = "PaidPending" },
                                new SelectListItem() { Value = "PatientResp", Text = "PatientResp" },
                                new SelectListItem() { Value = "PendAdjust", Text = "PendAdjust" },
                                new SelectListItem() { Value = "PendFacility", Text = "PendFacility" },
                                new SelectListItem() { Value = "PendIns", Text = "PendIns" },
                                new SelectListItem() { Value = "PendOther", Text = "PendOther" },
                                new SelectListItem() { Value = "x_Other", Text = "x_Other" }
                             }))


                    @*@Html.EditorFor(model => model.CollNoteCat, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.CollNoteCat, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Priority, (IEnumerable<SelectListItem>)(new[] {
                                new SelectListItem() { Value = "1", Text = "1" },
                                new SelectListItem() { Value = "2", Text = "2" },
                                new SelectListItem() { Value = "3", Text = "3" },
                                new SelectListItem() { Value = "4", Text = "4" },
                                new SelectListItem() { Value = "5", Text = "5" }
                             }))
                    @*@Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ACType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownListFor(model => model.ACType, (IEnumerable<SelectListItem>)(new[] {
                    new SelectListItem() { Value = "CollectionNotes", Text = "CollectionNotes" },
                    new SelectListItem() { Value = "Denials", Text = "Denials" }
                    }))

                    @*@Html.EditorFor(model => model.ACType, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.ACType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input class="form-control text-box single-line" id="NTUser" name="NTUser" type="hidden" value=@User.Identity.Name />
                    <span class="field-validation-valid text-danger" data-valmsg-for="NTUser" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }


</div>

