@model MDM.WebPortal.Models.FromDB.CPTData

<div class="panel panel-primary">
    <div class="panel-body">
        @using (Html.BeginForm("Create","CPTDatas",FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            @Html.Hidden("Active", true)

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div id="divCpt" class="col-md-offset-1 col-md-10">
                        <label class="control-label">CPT <sup class="text-danger">*</sup></label>
                        @Html.EditorFor(model => model.CPT, new { htmlAttributes = new { id = "tbCpt", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CPT, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        <label id="lbDescription" class="control-label">CPT DESCRIPTION <sup class="text-danger">*</sup></label>
                        @Html.TextAreaFor(model => model.CPT_Description, 5, 50, new { htmlAttributes = new { id = "tbDescription", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CPT_Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        @Html.LabelFor(model => model.ShortD, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.ShortD, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortD, "", new { @class = "text-danger" })
                    </div>
                </div>
               

                <div class="form-group">
                    <div class="col-md-offset-10 col-md-2">
                        <button id="btnCreate" type="submit" value="" class="btn btn-ar btn-primary" onclick="return CheckRequired();">Create</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/lib/Notify/notify.min.js"></script>
<script>
    function CheckRequired() {
        if ($.trim($('#tbCpt').val()).length === 0) {
            $('#tbCpt').notify("This field is required.", { position: "bottom left" });
            $('#tbCpt').focus();
            return false;
        }
        if ($.trim($('#tbCpt').val()).length > 10) {
            $('#tbCpt').notify("The field CPT must be a string with a maximum length of 10.", { position: "bottom left" });
            $('#tbCpt').focus();
            return false;
        }
        if ($('textarea').val().trim().length === 0) {
            $('#lbDescription').notify("This field is required.", { position: "bottom left" });
            $('#tbDescription').focus();
            return false;
            }
        else {
            return true;
        }
    }

    ////--------Check User Disponibility--------//
    var domainName = "http://" + window.location.host.toString();
    $("#tbCpt").change(function () {
        var term = $(this).val();
        if (term.length > 10) {
            $('#tbCpt').notify("The field CPT must be a string with a maximum length of 10.", { position: "bottom left" });
            $('#tbCpt').focus();
        }
        $.ajax({
            url: domainName + '/CPTDatas/FindCpt',
            data: { term: term },
            success: function (data) {
                if (data.length == 0) {
                    var newSpanSuccess = document.createElement('span');
                    newSpanSuccess.setAttribute('class', 'glyphicon glyphicon-ok form-control-feedback');

                    if ($("#divCpt").hasClass('has-error')) {
                        $("#divCpt").removeClass('has-error');
                        $(".glyphicon-remove").remove();

                        $("#divCpt").addClass('has-success has-feedback');
                        document.getElementById('divCpt').appendChild(newSpanSuccess);
                    }
                    else {
                        $("#divCpt").addClass('has-success has-feedback');
                        document.getElementById('divCpt').appendChild(newSpanSuccess);
                    }
                       
                }
                else {
                    var newSpanFail = document.createElement('span');
                    newSpanFail.setAttribute('class', 'glyphicon glyphicon-remove form-control-feedback');

                    $('#tbCpt').notify("This CPT is already in database.", { position: "bottom left" });
                    $('#tbCpt').focus();

                    if ($("#divCpt").hasClass('has-success')) {
                        $("#divCpt").removeClass('has-success');
                        $(".glyphicon-ok").remove();

                        $("#divCpt").addClass('has-error has-feedback');
                        document.getElementById('divCpt').appendChild(newSpanFail);
                    }
                    else {
                        $("#divCpt").addClass('has-error');
                        document.getElementById('divCpt').appendChild(newSpanFail);
                    }
                       
                }
            },
            error: function (xhr, ajaxOptions, thrwnError) {
                alert("error");
            }
        });
    });
</script>

