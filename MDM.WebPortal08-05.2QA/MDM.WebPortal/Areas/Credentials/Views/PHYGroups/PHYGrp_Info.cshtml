@using Kendo.Mvc.UI
@using MDM.WebPortal.Areas.Credentials.Models.ViewModel
@model IEnumerable<MDM.WebPortal.Areas.Credentials.Models.ViewModel.VMPHYGrp>

@{
    Layout = null;
    int pos = ViewBag.MasterPOS;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-3">
            <a class="k-button k-button-icontext k-add-button" href="javascript:void(0);" onclick="savePhyGrp(@pos)"><span class="k-icon k-add"></span>NEW</a>
            <a id="@pos" class="btn btn-default" onclick="return openWindow(this.id);"><i class="fa fa-check-square-o"></i> CHOOSE</a>
        </div>
        <div class="pull-right">
            @if (Model.Any())
            {
                <span class="button-dropdown button-dropdown" data-buttons="dropdown">
                    <button class="button button-rounded" style="height: 35px !important; font-size: 15px !important; color: #333; border: 1px solid #ccc !important; background-color: #fff;">
                        EXPORT <i class="fa fa-caret-down"></i>
                    </button>
                    <ul class="button-dropdown-list">
                        <li><a id="exportPhyPdf_@pos" class="btn btn-default" onclick="exportToPdfP(this.id)"><span class="fa fa-file-pdf-o"></span> PDF</a></li>
                        <li><a id="exportPhyXls_@pos" class="btn btn-default" onclick="exportToXlsP(this.id)"><span class="fa fa-file-excel-o"></span> EXCEL</a></li>
                    </ul>
                </span>
            }
        </div>
    </div>
    <br/>
    
    @(Html.Kendo().ListView<MDM.WebPortal.Areas.Credentials.Models.ViewModel.VMPHYGrp>(Model)
          .Name("lV_" + pos)
          .TagName("div")
          .ClientTemplateId("template")
          .DataSource(dataSource => dataSource
              .Events(x => x.Error("phyErrorHandler"))
              .Model(model =>
              {
                  model.Id("PHYGrpID");
                  model.Field(e => e.Physicians).DefaultValue(new List<VMProvider>());
              })
              .PageSize(1)
              .Create(create => create.Action("Create_Groups", "PHYGroups", new {ParentID = pos}))
              .Read(read => read.Action("Read_POSGrp", "PHYGroups", new {MasterPOSID = pos}))
              .Update(update => update.Action("Update_Groups", "PHYGroups"))
          )
          .Editable(e => e.TemplateName("POSPhyGViewModelEditor"))
          )
</div>


<script type="text/x-kendo-tmpl" id="template">
    <div class="container-fluid">
       
        <br />
        <div class="row">
            <div class="col-md-5">
                <div class="panel panel-primary box-panel-admin">
                    <div class="panel-heading text-uppercase"></div>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <tbody>
                                <tr>
                                    <th>
                                        <i class="fa fa-users"></i> PHYSICIAN GROUP NAME:
                                    </th>
                                    <td>
                                        ${PHYGroupName}
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <i class="fa fa-hashtag"></i> PHYSICIAN GROUP NPI NUMBER
                                    </th>
                                    <td>
                                        ${PHYGrpNPI_Num}
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
           
            <div class="col-md-5">
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border text-uppercase">physicians:</legend>                        
                    <ul>
                        #for(var i = 0; i < Physicians.length; i++){#
                        <li>#:Physicians[i].ProviderName#</li>
                        #}#
                    </ul>

                </fieldset>
            </div>
           
        </div>

        <div class="edit-buttons">
            <a class="k-button k-edit-button" href="\\#"><span class="k-icon k-edit"></span></a>            
        </div>
        <br />

    </div>
</script>

<script>
    @*$(function () {
        var listView = $("#lV_"+@pos).data("kendoListView");

        $(".k-add-button").click(function (e) {
            listView.add();
            e.preventDefault();
        });
    });*@
    function savePhyGrp(f) {
        var lVPhyG = $("#lV_" + f).data("kendoListView");
        lVPhyG.add();
    }

    function exportToPdfP(g) {
        var id = g.split("_")[1];
        if (id != undefined) {
            var listViewA = $("#lV_" + id).data("kendoListView");
            var itemsCount = listViewA.dataSource.view().length;
            if (itemsCount > 0) {
                kendo.drawing.drawDOM($("#lV_" + id))
                  .then(function (group) {
                      // Render the result as a PDF file
                      return kendo.drawing.exportPDF(group, {
                          paperSize: "auto",
                          margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" }
                      });
                  })
                  .done(function (data) {
                      // Save the PDF file
                      kendo.saveAs({
                          dataURI: data,
                          fileName: "PhysicianGroup.pdf",
                          proxyURL: "@Url.Action("Pdf_Export_Save", "MasterPOS")"
                      });
            });
        } else {
            alert("Invalid Export Operation.");
        }
    }
    console.log('Undefined ID property');
    }

    function exportToXlsP(g) {
        var id = g.split("_")[1];
        if (id != undefined) {
            var listViewA = $("#lV_" + id).data("kendoListView");
            var data = listViewA.dataSource.view();
            if (data.length > 0) {
                var docs = [];
               
                for (var i = 0; i < data[0].Physicians.length; i++) {
                    docs.push({ value: data[0].Physicians[i].ProviderName });
                }
                var workbook = new kendo.ooxml.Workbook({
                    sheets: [
                        {
                            columns: [{ width: 200 }, { width: 200 }],
                            name: "General Info",
                            rows: [
                              {
                                  cells: [
                                      { value: "PHYSICIAN GROUP NAME" },
                                      { value: "PHYSICIAN GROUP NPI NUMBER" }
                                  ]
                              },
                              {
                                  cells: [
                                      { value: data[0].PHYGroupName },
                                      { value: data[0].PHYGrpNPI_Num }
                                  ]
                              }
                            ]
                        },
                        {
                            columns: [{ width: 300 }],
                            name: "Physicians",
                            rows: [
                              {
                                  cells: [
                                      { value: "DOCTORS" }
                                  ]
                              },
                              {
                                  cells: docs
                              }
                            ]
                        }
                    ]

                });
                kendo.saveAs({
                    dataURI: workbook.toDataURL(),
                    fileName: "PhysicainGroup.xlsx"
                });
            }
            else {
                alert("Invalid Export Operation.");
            }
        }
        console.log('Undefined ID property');
    }

</script>
