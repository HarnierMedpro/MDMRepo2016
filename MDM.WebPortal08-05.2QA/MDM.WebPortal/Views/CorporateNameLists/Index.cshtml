@*@model IEnumerable<MedProMDM.Models.CorporateNameList>*@

@{
    ViewBag.Title = "Index";
}


@* classic asp.net mvc view
    @using (Html.BeginForm())
{
    <p>
        Find by Corporate Name: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.DBno)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CorporateName)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.DBno)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CorporateName)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.id }) |
            @Html.ActionLink("Details", "Details", new { id=item.id })             
        </td>
    </tr>
}

</table>*@

<div class="container">
    <h2 class="section-title">Corporate Name List - Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    @(Html.Kendo().Grid<MDM.WebPortal.Models.ViewModel.VMCorporateNameList>()
          .Name("CorporateNameList")
          .ToolBar(tools => tools.Excel())
          .Excel(excel => excel
              .AllPages(true)
              .FileName("ExportData.xlsx")
              .Filterable(false)
          )
          .Columns(column =>
          {
              column.Bound(c => c.id).Hidden(true);
              column.Bound(c => c.CorporateName).Title("CORPORATE NAME").Width(110);
              column.Bound(c => c.DBno).Title("DB").Width(110);
          })
          .DataSource(dataSource => dataSource
              .Ajax()
              .Model(model =>
              {
                  model.Id(p => p.id);
                  model.Field(x => x.id).Editable(false);
              })
              .PageSize(10)
              .Events(events => events.Error("error_handler")) //allows us catch the errors sent by the JSON object, especificados por ModelState
              .Read(read => read.Action("Read", "CorporateNameLists").Type(HttpVerbs.Post))
          //.Update(update => update.Action("Update", "CorporateNameLists").Type(HttpVerbs.Post))
          )

          .Groupable()
          .Sortable()
          .Filterable()
          .Pageable(ps => ps.Refresh(true)
          .PreviousNext(true).PageSizes(true))
          .Reorderable(r => r.Columns(true))
          .Resizable(r => r.Columns(true))
          .Selectable(s => s.Enabled(true)
              .Type(GridSelectionType.Row)
              .Mode(GridSelectionMode.Single))
          )
</div>
<script src="~/Scripts/kendo/jszip.min.js"></script>
<script>
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>