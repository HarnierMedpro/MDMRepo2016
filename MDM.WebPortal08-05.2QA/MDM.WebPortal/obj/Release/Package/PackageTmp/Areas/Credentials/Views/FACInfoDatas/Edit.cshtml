@*@model MDM.WebPortal.Models.FromDB.FACInfoData*@

@using Kendo.Mvc.UI
@model MDM.WebPortal.Areas.Credentials.Models.ViewModel.VMFACInfoData


@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home", new {area = ""})"><i class="fa fa-home"></i> Home</a></li>
            <li><a href="@Url.Action("Index_MasterPOS", "MasterPOS", new {area = "Credentials"})"> LocationsPOS</a></li>
            <li class="active">Update</li>
        </ol>
    </div>
</header>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-2 col-md-8">
            
            @if (ViewBag.Error != null)
            {
                <div class="row">
                    <div class="col-md-5">
                        <div class="alert alert-danger">
                            <a href="#" class="close" data-dismiss="alert" aria-label="Close">&times;</a>
                            <p>@ViewBag.Error</p>
                        </div>
                    </div>
                </div>
            }
            
            <div class="panel panel-primary box-panel-admin">
                <div class="panel-heading text-bold text-uppercase">
                    <i class="fa fa-info-circle"></i>
                    update additional info
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <hr/>
                            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                            @Html.HiddenFor(model => model.InfoDataID)

                            @*<div class="form-group">
                                <div class="col-md-12">
                                    <label class="control-label">MEDICAL DIRECTOR NAME <strong class="text-danger">*</strong></label>
                                    @Html.EditorFor(model => model.DocProviderName, new {htmlAttributes = new {id = "e-Doc", @class = "form-control form-control1"}})
                                    @Html.ValidationMessageFor(model => model.DocProviderName, "", new {@class = "text-danger"})
                                </div>
                            </div>*@

                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.LicType, htmlAttributes: new {@class = "control-label"})
                                    @Html.EditorFor(model => model.LicType, new {htmlAttributes = new {@class = "form-control form-control1"}})
                                    @Html.ValidationMessageFor(model => model.LicType, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.StateLic, htmlAttributes: new {@class = "control-label"})
                                    @*@Html.EditorFor(model => model.StateLic, new { htmlAttributes = new { @class = "form-control form-control1" } })*@
                                    @Html.DropDownList("StateLic", null, new {httmlAttributes = new {@class = "form-control"}})
                                    @Html.ValidationMessageFor(model => model.StateLic, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.LicNumCLIA_waiver, htmlAttributes: new {@class = "control-label"})
                                    @Html.EditorFor(model => model.LicNumCLIA_waiver, new {htmlAttributes = new {@class = "form-control form-control1"}})
                                    @Html.ValidationMessageFor(model => model.LicNumCLIA_waiver, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.LicEffectiveDate, htmlAttributes: new {@class = "control-label"})
                                            @*@Html.TextBoxFor(model => model.LicEffectiveDate, @"{0:MM/dd/yyyy}", htmlAttributes: new { id = "", @class = "form-control form-control1" })*@

                                            @(Html.Kendo().DatePicker()
                                                  .Name("LicEffectiveDate")
                                                  .Value(Model.LicEffectiveDate)
                                                  .Max(DateTime.Today)
                                                  .ParseFormats(new string[] {"MM/dd/yyyy"})
                                                  .Events(e => e.Change("startChange"))
                                                  .HtmlAttributes(new {style = "width:100%; height:33.30px !important;"})
                                                  )
                                            @Html.ValidationMessageFor(model => model.LicEffectiveDate, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.LicExpireDate, htmlAttributes: new {@class = "control-label"})
                                            @*@Html.TextBoxFor(model => model.LicExpireDate, @"{0:MM/dd/yyyy}", htmlAttributes: new { id = "", @class = "form-control form-control1" })*@

                                            @(Html.Kendo().DatePicker()
                                                  .Name("LicExpireDate")
                                                  .Value(Model.LicExpireDate)
                                                  .Min(DateTime.Today)
                                                  .ParseFormats(new string[] {"MM/dd/yyyy"})
                                                  .Events(e => e.Change("endChange"))
                                                  .HtmlAttributes(new {style = "width:100%; height:33.30px !important;"})
                                                  )
                                            @Html.ValidationMessageFor(model => model.LicExpireDate, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Taxonomy, htmlAttributes: new {@class = "control-label"})
                                    @Html.EditorFor(model => model.Taxonomy, new {htmlAttributes = new {@class = "form-control form-control1"}})
                                    @Html.ValidationMessageFor(model => model.Taxonomy, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            @*<div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.FAC_NPI_Num, htmlAttributes: new {@class = "control-label"})
                                    @Html.EditorFor(model => model.FAC_NPI_Num, new {htmlAttributes = new {id = "e-NPINumb", @class = "form-control form-control1"}})
                                    @Html.ValidationMessageFor(model => model.FAC_NPI_Num, "", new {@class = "text-danger"})
                                </div>
                            </div>*@

                            <div class="text-center">
                                <div class="form-group">
                                    <button id="btnSave" type="submit" value="Create" class="btn btn-ar btn-primary" onclick="return CheckRequired();">
                                        <i class="fa fa-cloud-upload"></i> Save
                                    </button>
                                    <a href="@Url.Action("Index_MasterPOS", "MasterPOS", new {area = "Credentials"})" class="btn btn-ar btn-danger">
                                        <i class="fa fa-ban"></i> Cancel
                                    </a>
                                </div>
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

           


<script src="~/Scripts/lib/inputmask/inputmask.js"></script>
<script src="~/Scripts/lib/inputmask/inputmask.regex.extensions.js"></script>
<script src="~/Scripts/lib/inputmask/inputmask.date.extensions.js"></script>
<script src="~/Scripts/lib/inputmask/jquery.inputmask.js"></script>
<script src="~/Scripts/lib/Notify/notify.min.js"></script>
<script src="~/Scripts/lib/Moment/moment.min.js"></script>

<script>
    
    $(document).ready(function () {
        $("#e-NPINumb").inputmask({
            mask: "*{10,10}",
            greedy: false,
            definitions: {
                '*': {
                    validator: "[0-9A-Za-z!#$%&'*+/=?^_`{|}~\-]",
                    cardinality: 1,
                    casing: "upper"
                }
            }
        });
    });

    /*----------Selecting dates with Kendo Date Picker--------------------*/
    function startChange() {
        var endPicker = $("#LicExpireDate").data("kendoDateTimePicker"),
            startDate = this.value();

        if (startDate) {
            startDate = new Date(startDate);
            startDate.setDate(startDate.getDate() + 1);
            endPicker.min(startDate);
        }
    }

    function endChange() {
        var startPicker = $("#LicEffectiveDate").data("kendoDateTimePicker"),
            endDate = this.value();

        if (endDate) {
            endDate = new Date(endDate);
            endDate.setDate(endDate.getDate() - 1);
            startPicker.max(endDate);
        }
    }

    /*----------Selecting dates with Kendo Date Picker--------------------*/

    /*---------------------------Texting dates---------------------------*/
    $(function EffectiveDate() {/*Mascara para License Effective Date*/
        $("#LicEffectiveDate").inputmask("mm/dd/yyyy", {
            "oncomplete": function () {
                var d = $("#LicEffectiveDate").val().toString();
                /*Es el valor de la fecha escrita como dob mayor que la fecha actual*/
                var di = moment().isBefore(d, 'day');
                if (di) {
                    $("#LicEffectiveDate").notify("Invalid date!",
                    {
                        position: "top left",
                        className: 'error'
                    }
                    );
                    $('#btnSave').prop('disabled', true);
                }
                    /*Si esta establecida License Expire Date esta tiene que ser mayor que License Effective Date*/
                else if ($.trim($('#LicExpireDate').val().length) > 0) {
                    var s = new Date($("#LicEffectiveDate").val());
                    var e = new Date($("#end").val());
                    if (s >= e) {
                        $("#LicEffectiveDate").notify("Invalid date!",
                            {
                                position: "top left",
                                className: 'error'
                            }
                    );
                        $('#btnSave').prop('disabled', true);
                    }
                    else {
                        $('#btnSave').prop('disabled', false);
                    }
                }
                else {
                    $('#btnSave').prop('disabled', false);
                }
            }
        });
    });

    $(function ExpireDate() {/*Mascara para License Expire Date*/
        $("#LicExpireDate").inputmask("mm/dd/yyyy", {
            "oncomplete": function () {
                if ($.trim($('#LicEffectiveDate').val().length) > 0) {
                    var s = new Date($("#LicEffectiveDate").val());
                    var e = new Date($("#LicExpireDate").val());
                    if (s >= e) {
                        $("#LicExpireDate").notify("Invalid date!",
                            {
                                position: "top left",
                                className: 'error'
                            }
                    );
                        $('#btnSave').prop('disabled', true);
                    }
                    else {
                        $('#btnSave').prop('disabled', false);
                    }
                }
                else {
                    $('#btnSave').prop('disabled', false);
                }
            }
        });
    });
    /*---------------------------Texting dates---------------------------*/

    function CheckRequired() {
        if ($.trim($('#e-Doc').val().length) == 0) {
            $('#e-Doc').notify("This field is required.", { position: "bottom left" });
            $('#e-Doc').focus();
            return false;
        }
        else {
            return true;
        }
    }

</script>