
@using MDM.WebPortal.Models.ViewModel
@model IEnumerable<MDM.WebPortal.Models.Identity.Permission>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout1.cshtml";
    var primero = (List<VMPermission>) ViewBag.Permisions;
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home", new {area = ""})"><i class="fa fa-home"></i> Home</a></li>
            <li class="active">Permissions</li>
        </ol>
    </div>
</header>



@*/*See: C:\Users\hsuarez\Desktop\Documentation\Kendo UI for ASP.NET MVC5\ui-for-aspnet-mvc-examples-master\grid\multiselect-in-grid-popup*/*@
<script type="text/kendo" id="territoriesTemplate">
    <ul>
        #for(var i = 0; i< data.length; i++){#
        <li>#:data[i].Name#</li>
        #}#
    </ul>
</script>

<script type="text/javascript">
    var territoriesTemplate = kendo.template($("#territoriesTemplate").html(), { useWithBlock: false });
</script>

<div class="container-fluid">
    @(Html.Kendo().Grid<VMPermission>()
    .Name("Permissions")
            .ToolBar(tools => { tools.Create().Text("NEW PERMISSION"); tools.Excel(); })
    .Columns(columns =>
        {
            columns.Command(comm =>
            {
                comm.Edit();
            });
            columns.Bound(e => e.PermissionID).Hidden(true);
            columns.ForeignKey(x => x.ControllerID, (System.Collections.IEnumerable)ViewData["Controllers"], "ControllerID", "Cont_Name").Groupable(false).Filterable(false).Sortable(false);
            columns.ForeignKey(x => x.ActionID, (System.Collections.IEnumerable)ViewData["Actions"], "ActionID", "Act_Name");
            columns.Bound(e => e.Active);
            columns.Bound(e => e.Roles).ClientTemplate("#=territoriesTemplate(Roles)#").Title("ROLES").Filterable(false).Sortable(false).Groupable(false);
        })
    .Groupable()
    .Filterable()
    .Pageable(ps => ps.Refresh(true)
    .PreviousNext(true).PageSizes(true))
    .Sortable()
    .Reorderable(r => r.Columns(true))
    .Resizable(r => r.Columns(true))
    .Selectable(s => s.Enabled(true)
    .Type(GridSelectionType.Row)
    .Mode(GridSelectionMode.Single))

    .Editable(editable => { editable.TemplateName("PermissionViewModelEditor"); editable.Mode(GridEditMode.PopUp); })
    .DataSource(dataSource => dataSource
      .Ajax()
      .PageSize(10)
      .Model(model =>
        {
            model.Id(e => e.PermissionID);
            model.Field(e => e.Roles).DefaultValue(new List<VMPermissionRole>());
        })
        //.Group(groupby => groupby.Add(property => property.ControllerID))
            .Events(events => events.Error("error_handler"))
            .Read(read => read.Action("Read_Permissions", "Permissions"))
            .Update(update => update.Action("Update_Permission", "Permissions").Data("serialize"))
            .Create(create => create.Action("Create_Permission", "Permissions").Data("serialize")))
   )
    
</div>

<script src="~/Scripts/kendo/jszip.min.js"></script>
<script type="text/javascript">
    function serialize(data) {
        debugger;
        for (var property in data) {
            if ($.isArray(data[property])) {
                serializeArray(property, data[property], data);
            }
        }
    }

    function serializeArray(prefix, array, result) {
        for (var i = 0; i < array.length; i++) {
            if ($.isPlainObject(array[i])) {
                for (var property in array[i]) {
                    result[prefix + "[" + i + "]." + property] = array[i][property];
                }
            }
            else {
                result[prefix + "[" + i + "]"] = array[i];
            }
        }
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message
            alert(message);
            // Cancel the changes
            var grid = $("#grid").data("kendoGrid");
            grid.cancelChanges();
        }
    }
</script>
