@model IEnumerable<MDM.WebPortal.Models.FromDB.DBList>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index","Home")"><i class="fa fa-home"></i> Home</a></li>            
            <li class="active">DBs</li>
        </ol>
    </div>
</header>


<script src="~/Scripts/kendo/jszip.min.js"></script>
<div class="container-fluid">
    @(Html.Kendo().Grid<MDM.WebPortal.Models.ViewModel.VMDBList>()
          .Name("GridDB")
          .DataSource(dataSource => dataSource
              .Ajax()
              .ServerOperation(true)
              .PageSize(10)
              .Model(model =>
              {
                  model.Id(x => x.DB_ID); // Specify the property which is the unique identifier of the model
                  model.Field(x => x.DB_ID).Editable(false); // Make the ProductID property not editable
                  model.Field(x => x.DB).Editable(false);
                  model.Field(x => x.databaseName).Editable(false);
              })
              .Events(events => events.Error("error_handler"))
              .Update(update => update.Action("Update", "DBLists")) // Action invoked when the user saves an updated data item
              .Read(read => read.Action("Read", "DBLists")) // Set the action method which will return the data in JSON format
              //.Create(create => create.Action("Create_DBs", "DBLists"))
          )

          .Columns(columns =>
          {

              columns.Bound(x => x.DB).Title("DB").Width(110);

              columns.Bound(p => p.databaseName).Title("NAME").Width(110);

              columns.Bound(p => p.active).Title("ACTIVE").Width(110);

              columns.Command(commands =>
              {
                  commands.Edit();
              }).Title("COMMANDS").Width(110);
          })


          .ToolBar(tools => {
              tools.Excel(); 
             // tools.Create(); 
          })
          .Excel(excel => excel
              .AllPages(true)
              .FileName("ExportDBs.xlsx")
              .Filterable(false))

          .Filterable()
          .Pageable(ps => ps.Refresh(true)
          .PreviousNext(true).PageSizes(true))
          .Sortable()
          .Groupable()
          .Reorderable(r => r.Columns(true))
          .Resizable(r => r.Columns(true))
          .Selectable(s => s.Enabled(true)
          .Type(GridSelectionType.Row)
          .Mode(GridSelectionMode.Single))
          )
</div>

<script>
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message
            alert(message);
            // Cancel the changes
            var grid = $("#GridDB").data("kendoGrid");
            grid.cancelChanges();
        }
    }
</script>
