@using System.Collections
@using System.Collections.Generic
@using Kendo.Mvc.UI
@using MDM.WebPortal.Models.FromDB

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home", new {area = ""})"><i class="fa fa-home"></i> Home</a></li>
            <li class="active">LocationsPOS</li>
        </ol>
    </div>
</header>

<div class="container-fluid">
    @if (TempData["Error"] != null)
    {
        <div class="row">
            <div class="col-md-5">
                <div class="alert alert-danger">
                    <a href="#" class="close" data-dismiss="alert" aria-label="Close">&times;</a>
                    <p>@TempData["Error"]</p>
                </div>
            </div>
        </div>
    }
    @(Html.Kendo().Grid<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMLocationsPOS>()
          .Name("POSLOC")
          .ToolBar(tool => tool.Excel())
          .Columns(column =>
          {
              column.Bound(pos => pos.Facitity_DBs_IDPK).Hidden(true);

              column.Bound(pos => pos.PosName).Width(110);

              column.ForeignKey(pos => pos.FvPList_FvPID, (IEnumerable<MDM.WebPortal.Models.ViewModel.Delete.VMFvpList>) ViewData["FvPLists"], "id", "FvpName").Width(70);

              column.Bound(pos => pos.TaxID).Width(110);

              column.Bound(pos => pos.DBA_Name).Width(110);

              column.Bound(pos => pos.POSFAC_Manager).Width(110);

              column.Command(command =>
              {
                  command.Edit();
              }).Title("ACTIONS").Width(110);
          })
          .Pageable(ps => ps.Refresh(true)
              .PreviousNext(true).PageSizes(true))
          .Sortable()
          .Filterable()
          .Selectable(selectable => selectable
              .Mode(GridSelectionMode.Multiple)
              .Type(GridSelectionType.Cell))
          .Events(events => events.Change("onChange"))
          .DataSource(datasource => datasource
              .Ajax()
              .ServerOperation(true)
              .PageSize(10)
              .Model(model =>
              {
                  model.Id(pos => pos.Facitity_DBs_IDPK);
                  model.Field(pos => pos.Facitity_DBs_IDPK).Editable(false);
              })
              .Events(events =>
              {
                  events.Error("error_handler");
                  /*Grid DataSource "Change" event: Si se va a modificar un row del grid se dispara este evento*/
                  events.Change("onChangeInside"); 
              })
              .Read(read => read.Action("Read_LocationPOS", "LocationsPOS"))
              .Update(update => update.Action("Update_LocationPOS", "LocationsPOS"))
          )

          .ClientDetailTemplateId("template")
          
          )
</div>



<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().TabStrip()
          .Name("tabStrip_#=Facitity_DBs_IDPK#")
          .SelectedIndex(0)
          .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
          .Items(items =>
          {
              items.Add().Text("Address Info")
                  .LoadContentFrom("Details", "POSAddressInfo", new { id = "#=Facitity_DBs_IDPK#", area = "PlaceOfServices" });
              
              items.Add().Text("Additional Info")
                  .LoadContentFrom("Details", "FACInfoDatas", new { id = "#=Facitity_DBs_IDPK#", area = "PlaceOfServices" });

              items.Add().Text("Physician Group").HtmlAttributes(new {id="phyGrp"/*, style = "display:none"*/})
                 .LoadContentFrom("Details", "PHYGroups", new { locationPOSID = "#=Facitity_DBs_IDPK#", area = "PlaceOfServices" });  
              
              items.Add().Text("Level Of Care").Content(@<text>
                    @(Html.Kendo().Grid<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMLocPOS_LevOfCare>()
                          .Name("grid_#=Facitity_DBs_IDPK#") // template expression, to be evaluated in the master context
                          .ToolBar(tool =>
                          {
                              tool.Create().Text("NEW LEVEL OF CARE");
                          })
                          .Columns(columns =>
                          {
                              columns.Bound(o => o.LocPosLocID).Hidden(true);
                              columns.Bound(o => o.LocationsPOS_Facitity_DBs_IDPK).Hidden(true);
                              columns.ForeignKey(o => o.Lev_of_Care_LevOfCareID, (IEnumerable<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMLevelOfCare>) ViewData["LevOfCare"], "LevOfCareID", "LevOfCareName").Width(110);
                              
                              columns.Command(command =>
                              {
                                  command.Edit();
                              }).Title("ACTIONS").Width(110);
                          })
                          .DataSource(dataSource => dataSource
                              .Ajax()
                              .PageSize(5)
                              .Model(model =>
                              {
                                  model.Id(x => x.LocPosLocID);
                                  model.Field(x => x.LocPosLocID).Editable(false);
                                  model.Field(x => x.LocationsPOS_Facitity_DBs_IDPK).Editable(false);
                              })
                              .Events(events => events.Error("lOCError_handler"))
                              .Read(read => read.Action("Read_LevelsOfCareByLocPOS", "LocationsPOS", new {locPOSID = "#=Facitity_DBs_IDPK#"}))
                              .Update(update => update.Action("Update_POS_LOfCare", "LocPOS_LevOfCare"))
                              /*The fact that I was using 'LocationsPOS_Facitity_DBs_IDPK' as my route variable and it was the problem. It was trying to use the 'LocationsPOS_Facitity_DBs_IDPK' of the new row,
                               * which of course was 0. * Changing the name of the route variable to 'ParentID' fixed the problem.*/
                              .Create(create => create.Action("Create_POS_LOfCare", "LocPOS_LevOfCare", new { ParentID = "#=Facitity_DBs_IDPK#" }))
                          )
                          .Pageable()
                          .Sortable()
                          .ToClientTemplate())
                </text>
                  );

              items.Add().Text("Services").Content(@<text>
                    @(Html.Kendo().Grid<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMLocPOS_MPServ>()
                          .Name("gridService_#=Facitity_DBs_IDPK#") // template expression, to be evaluated in the master context
                          .ToolBar(tool =>
                          {
                              tool.Create().Text("NEW SERVICE");
                          })
                          .Columns(columns =>
                          {
                              columns.Bound(o => o.LocPosMPServID).Hidden(true);
                              columns.Bound(o => o.LocationsPOS_Facitity_DBs_IDPK).Hidden(true);
                              columns.ForeignKey(o => o.MPServices_MPServID, (IEnumerable<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMMPService>)ViewData["Service"], "MPServID", "ServName").Width(110);
                             
                              columns.Command(command =>
                              {
                                  command.Edit();
                              }).Title("ACTIONS").Width(110);
                          })
                          .DataSource(dataSource => dataSource
                              .Ajax()
                              .PageSize(5)
                              .Model(model =>
                              {
                                  model.Id(x => x.LocPosMPServID);
                                  model.Field(x => x.LocPosMPServID).Editable(false);
                                  model.Field(x => x.LocationsPOS_Facitity_DBs_IDPK).Editable(false);
                              })
                              .Events(events => events.Error("ServError_handler"))
                              .Read(read => read.Action("Read_ServicesByLocPOS", "LocationsPOS", new { locPOSID = "#=Facitity_DBs_IDPK#" }))
                              .Update(update => update.Action("Update_POSService", "LocPOS_MPServ"))
                              /*The fact that I was using 'LocationsPOS_Facitity_DBs_IDPK' as my route variable and it was the problem. It was trying to use the 'LocationsPOS_Facitity_DBs_IDPK' of the new row,
                               * which of course was 0. * Changing the name of the route variable to 'ParentID' fixed the problem.*/
                              .Create(create => create.Action("Create_POSService", "LocPOS_MPServ", new { ParentID = "#=Facitity_DBs_IDPK#" }))
                          )
                          
                          .Sortable()
                          .ToClientTemplate())
            </text>
                  );
              
          })
        .ToClientTemplate())
</script>

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function(key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
            var grid = $("#POSLOC").data("kendoGrid");
            grid.cancelChanges();
        }
    }

    function lOCError_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            
            alert(message);
            var pk = message.split(" ");
            var fst = pk[1];
            var grid1 = $("#grid_" + fst).data("kendoGrid");
            grid1.cancelChanges();
        }
    }

    function ServError_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });

            alert(message);
            var pk = message.split(" ");
            var fst = pk[1];
            var grid1 = $("#gridService_" + fst).data("kendoGrid");
            grid1.cancelChanges();
        }
    }
    
    function onChange(arg) {
        var selected = $.map(this.select(), function (item) {
            return $(item).text();
        });
        if (COND) {
            
        }
        alert("Selected: " + selected.length + " item(s), [" + selected.join(", ") + "]");
    }

    /*Como se esta actualizando un objeto LocationPOS*/
    function onChangeInside(e) {
        if (e.action == "itemchange") { //primero me cersioro de que sea mientras se esta haciendo un update
            if (e.field == "FvPList_FvPID") { //especificamente cuando se esta modificando el tipo de POS: "FAC" or "PHY"
                var model = e.items[0]; //Obtengo el row completo del objeto que se esta actualizando
                model.get("FvPList_FvPID"); //obtengo el valor especificamente del nuevo tipo seleccionado
                var pk = model.get("Facitity_DBs_IDPK"); //obtengo el valor del primary key del correspondiente LocationPOS object
                if (model.get("FvPList_FvPID") == 3) { //Si el tipo de POS es PHY entonces muestro el tab 2: "Physician Group"
                    $($("#tabStrip_" + pk).data("kendoTabStrip").items()[2]).attr("style", "display:true");
                } else {
                    $($("#tabStrip_" + pk).data("kendoTabStrip").items()[2]).attr("style", "display:none");
                }
            }
        }
    }

   
</script>


