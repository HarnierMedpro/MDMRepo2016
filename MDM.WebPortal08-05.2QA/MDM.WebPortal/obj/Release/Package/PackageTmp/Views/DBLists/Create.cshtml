@model MDM.WebPortal.Models.FromDB.DBList

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index","Home")"><i class="fa fa-home"></i> Home</a></li>
            <li><a href="@Url.Action("Index")"> DBs</a></li>
            <li class="active">New</li>
        </ol>
    </div>
</header>

<div class="admin-container">
    <div class="row">
        <div class="col-md-offset-2 col-md-9">
            @if (ViewBag.Error != null)
            {
                <div class="alert alert-danger">
                    <a href="#" class="close" data-dismiss="alert" aria-label="Close">&times;</a>
                    <p>@ViewBag.Error</p>
                </div>
            }
            <div class="panel panel-primary box-panel-admin">
                <div class="panel-heading"><p class="text-center text-uppercase">create db form</p></div>
                <div class="panel-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">   
                                <div id="divDB" class="col-sm-offset-2 col-md-offset-2 col-md-9">
                                    <label class="control-label">DB <sup class="text-danger">*</sup></label>
                                    @Html.EditorFor(model => model.DB, new { htmlAttributes = new { id = "tbDB", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DB, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-sm-offset-2 col-md-offset-2 col-md-9">
                                    @Html.Label("Name", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.databaseName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.databaseName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="text-center">
                                <div class="form-group">
                                    <button type="submit" value="Create" class="btn btn-sm btn-primary" onclick="return CheckRequired();">
                                        <i class="fa fa-cloud-upload"></i> Create
                                    </button>
                                    <a href="@Url.Action("Index")" class="btn btn-sm btn-danger">
                                        <i class="fa fa-times-circle-o"></i> Close
                                    </a>
                                </div>
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>    
</div>


<script src="~/Scripts/lib/inputmask/inputmask.js"></script>
<script src="~/Scripts/lib/inputmask/inputmask.numeric.extensions.js"></script>
<script src="~/Scripts/lib/inputmask/jquery.inputmask.js"></script>
<script src="~/Scripts/lib/Notify/notify.min.js"></script>

<script>
    $(document).ready(function () {
        $('#tbDB').inputmask("999");  //static mask       
    });

    ////--------Check User Disponibility--------//
    var domainName = "http://" + window.location.host.toString();
    $('#tbDB').change(function () {
        var term = $(this).val();
        $.ajax({
            url: domainName + '/DBLists/CheckDB',
            data: { term: term },
            success: function (data) {
                if (data.length == 0) {
                    var newSpanSuccess = document.createElement('span');
                    newSpanSuccess.setAttribute('class', 'glyphicon glyphicon-ok form-control-feedback');
                    if ($("#divDB").hasClass('has-error')) {
                        $("#divDB").removeClass('has-error');
                        $(".glyphicon-remove").remove();

                        $("#divDB").addClass('has-success has-feedback');
                        document.getElementById('divDB').appendChild(newSpanSuccess);
                    }
                    else {
                        $("#divDB").addClass('has-success has-feedback');
                        document.getElementById('divDB').appendChild(newSpanSuccess);
                    }
                }
                else {
                    var newSpanFail = document.createElement('span');
                    newSpanFail.setAttribute('class', 'glyphicon glyphicon-remove form-control-feedback');

                    $('#tbDB').notify("This DB is already in the system.", { position: "bottom left" });
                    $('#tbDB').focus();

                    if ($("#divDB").hasClass('has-success')) {
                        $("#divDB").removeClass('has-success');
                        $(".glyphicon-ok").remove();

                        $("#divDB").addClass('has-error has-feedback');
                        document.getElementById('divDB').appendChild(newSpanFail);
                    }
                    else {
                        $("#divDB").addClass('has-error');

                        document.getElementById('divDB').appendChild(newSpanFail);
                    }
                }
            },
            error: function (xhr, ajaxOptions, thrwnError) {
                alert("error");
            }
        });
    });

    function CheckRequired() {
        if ($.trim($('#tbDB').val()).length == 0) {
            $('#tbDB').notify("This field is required.", { position: "bottom left" });
            $('#tbDB').focus();
            return false;
        }
        else {
            return true;
        }
    }
</script>
