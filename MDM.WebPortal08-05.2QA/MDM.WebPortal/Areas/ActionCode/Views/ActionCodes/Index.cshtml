@using System.Collections
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home", new {area = ""})"><i class="fa fa-home"></i> Home</a></li>
            <li class="active">Categories</li>
        </ol>
    </div>
</header>

<div class="container-fluid">
    @(Html.Kendo().Grid<MDM.WebPortal.Areas.ActionCode.Models.ViewModels.VMActionCode>()
          .Name("ActionsC")
          .ToolBar(tools =>
          {
              tools.Excel();
              tools.Create().Text("NEW ACTIONCODE");
          })
          .Excel(e =>
          {
              e.AllPages(true);
              e.FileName("ExportAction_Code");
          })
          .Columns(column =>
          {
              column.Bound(x => x.ActionCodeID).Hidden(true);

              column.Bound(x => x.CollNoteType).Width(110);

              column.ForeignKey(x => x.CodeID, (IEnumerable)ViewData["Codigos"], "CodeID", "Code").Width(110);

              column.ForeignKey(x => x.CategoryID, (IEnumerable)ViewData["Category"], "CatogoryID", "CategoryName").Width(110);

              column.ForeignKey(x => x.PriorityID, (IEnumerable)ViewData["Priority"], "PriorityID", "PriorityName").Width(110);

              column.Bound(x => x.Active).Width(110);

              column.ForeignKey(x => x.ParsingYN, (IEnumerable)ViewData["Parsing"], "Value", "Text").Width(110);

              column.ForeignKey(x => x.ACTypeID, (IEnumerable)ViewData["ACType"], "ACTypeID", "ACTypeName").Width(110);

              column.Command(command =>
              {
                  command.Edit();
              }).Title("EDIT").Width(110);
          })
          .DataSource(dataSource => dataSource
              .Ajax()
              .PageSize(10)
              .Model(model =>
              {
                  model.Id(x => x.ActionCodeID);
                  model.Field(x => x.ActionCodeID).Editable(false);
              })
              .Events(events => events.Error("error_handler"))
              .Read(read => read.Action("Read_ActionCode", "ActionCodes"))
              .Update(update => update.Action("Update_ActionCode", "ActionCodes"))
              .Create(create => create.Action("Create_ActionCode", "ActionCodes"))
          )
          .Sortable()
          .Filterable()
          .Pageable(ps => ps.Refresh(true)
              .PreviousNext(true).PageSizes(true))
          .Groupable()
          .Reorderable(r => r.Columns(true))
          .Resizable(r => r.Columns(true))
          .Selectable(s => s.Enabled(true)
              .Type(GridSelectionType.Row)
              .Mode(GridSelectionMode.Single))
          )
</div>

<script src="~/Scripts/kendo/jszip.min.js"></script>
<script>
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message
            alert(message);
            // Cancel the changes
            var grid = $("#ActionsC").data("kendoGrid");
            grid.cancelChanges();
        }
    }
</script>
