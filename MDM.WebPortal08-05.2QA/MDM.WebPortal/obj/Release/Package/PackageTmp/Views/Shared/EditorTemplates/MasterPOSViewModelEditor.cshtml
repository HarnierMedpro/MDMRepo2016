@using System.Collections
@using MDM.WebPortal.Areas.Credentials.Models.ViewModel
@using MDM.WebPortal.Areas.ManagerDBA.Models.ViewModels
@using MDM.WebPortal.Models.ViewModel.Delete
@model MDM.WebPortal.Areas.Credentials.Models.ViewModel.VMMasterPOS
@{
    //required in order to render validation attributes
    ViewContext.FormContext = new FormContext();
    var fvP = (IEnumerable<VMFvpList>)ViewData["FvPLists"];
    var manager = (IEnumerable<VMManager_Master>)ViewData["Manager"];
    var director = (IEnumerable<VMProvider>)ViewData["MedDirector"];
    var dbL = (IEnumerable<VMDBList>)ViewData["Database"];
    var lvc = (IEnumerable<VMLevelOfCare>)ViewData["LevOfCare"];
    var serv = (IEnumerable<VMMPService>)ViewData["Service"];
    var form = (IEnumerable <VMFormsDict>) ViewData["Forms"];
}

<script type="text/javascript">
    function filterActions() {
        return {
            DB_ID: $("#DB_ID").data("kendoDropDownList").value()
        };
    }
</script>

<div class="container-fluid">
    @if (fvP.ToList().Count == 0 || manager.ToList().Count == 0 || director.ToList().Count == 0 || dbL.ToList().Count == 0 || lvc.ToList().Count == 0
         || serv.ToList().Count == 0 || form.ToList().Count == 0)
    {
        <div class="alert alert-info">
            <a href="#" class="close" data-dismiss="alert" aria-label="Close">&times;</a>
            @if (fvP.ToList().Count == 0)
            {
                <p>The FvPList Table is empty.</p>
            }
            @if (manager.ToList().Count == 0)
            {
                <p>The Manager_Master Table is empty. </p>
            }
            @if (director.ToList().Count == 0)
            {
                <p>The Providers Table is empty.</p>
            }
            @if (dbL.ToList().Count == 0)
            {
                <p>The Database Table is empty.</p>
            }
            @if (lvc.ToList().Count == 0)
            {
                <p>The Level Of Care Table is empty.</p>
            }
            @if (serv.ToList().Count == 0)
            {
                <p>The MPServices Table is empty.</p>
            }
            @if (form.ToList().Count == 0)
            {
                <p>The Forms Table is empty. </p>
            }
        </div>
    }

    <fieldset class="scheduler-border">
        <legend class="scheduler-border text-bold text-uppercase">master pos:</legend>


        <dl>
            <dd>
                <label>NAME<sup class="text-danger">*</sup></label>
            </dd>
            <dt>
                @Html.EditorFor(model => model.PosMasterName, new {htmlAttributes = new {@style = "width:100%; border-radius:3px !important; height:26px;"}})
            </dt>
        </dl>

        <dl>
            <dd>
                <label class="text-uppercase">pos classification<sup class="text-danger">*</sup></label>
            </dd>
            <dt>
                @(Html.Kendo().DropDownListFor(x => x.FvPList_FvPID)
                      .DataTextField("FvpName")
                      .DataValueField("FvPID")
                      .HtmlAttributes(new {style = "width: 100%"})
                      .BindTo((IEnumerable<MDM.WebPortal.Models.ViewModel.Delete.VMFvpList>) ViewData["FvPLists"])
                      )
            </dt>
        </dl>

        <dl>
            <dd>
                <label class="text-uppercase">account manager<sup class="text-danger">*</sup></label>
            </dd>
            <dt>
                @Html.EditorFor(model => model.ManagerID)
                @Html.ValidationMessageFor(m => m.ManagerID)
            </dt>
        </dl>

        <dl>
            <dd>
                <label class="text-uppercase">medical director<sup class="text-danger">*</sup></label>
            </dd>
            <dt>
                @Html.EditorFor(x => x.ProvID)
                @Html.ValidationMessageFor(m => m.ProvID)
            </dt>
        </dl>

        <dl>
            <dd>
                <label class="text-uppercase">database<sup class="text-danger">*</sup></label>
            </dd>
            <dt>
                @Html.EditorFor(x => x.DB_ID)
                @Html.ValidationMessageFor(m => m.DB_ID)
            </dt>
        </dl>

        <dl>
            <dd>
                <label class="text-uppercase">pos_ids<sup class="text-danger">*</sup></label>
            </dd>
            <dt>
                @* This is with VIRTUALIZATION but i don't know yet how pass params to the server with this way
                    @(Html.Kendo().MultiSelectFor(m => m.PosIDs)
                    .DataTextField("ZoomPos_Name")
                    .DataValueField("ZoomPos_ID")
                    .Placeholder("Select POS_ID...")
                    .DataSource(source =>
                        {
                            source.Custom()
                                .ServerFiltering(true)
                                .ServerPaging(true)
                                .PageSize(80)
                                .Type("aspnetmvc-ajax") //Set this type if you want to use DataSourceRequest and ToDataSourceResult instances
                                .Transport(transport =>
                                {
                                    transport.Read("Read_PosIDs", "Facitity_DBs", new { DB_ID = 8, area = "Credentials" });
                                })
                                .Schema(schema =>
                                {
                                    schema.Data("Data") //define the [data](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.data) option
                                          .Total("Total"); //define the [total](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.total) option
                                });
                        })
                )*@

                @* filterActions function is defined to get the PK of the Database and pass it to Read_PosIdsOfThisDB method to obtain all the POSIDs de dicha base de datos
                    see POSIDMultiselectEditor.cshtml

                   @(Html.Kendo().MultiSelectFor(m => m.PosIDs)
                     .DataTextField("ZoomPos_Name")
                     .DataValueField("ZoomPos_ID")
                     .Placeholder("Select POS_ID...")
                     .Filter(FilterType.Contains)
                     //.Events(e => e.Open("onOpen"))
                     .DataSource(source =>
                     {
                         source.Read(read =>
                         {
                             read.Action("Read_PosIdsOfThisDB", "Facitity_DBs") //Set the Action and Controller names.
                                 .Data("filterActions");
                         });
                         source.ServerFiltering(true);
                     })

                )*@

                @Html.EditorFor(x => x.PosIDs)
                @Html.ValidationMessageFor(m => m.PosIDs)
            </dt>
        </dl>

        <dl>
            <dd>
                @Html.LabelFor(x => x.LevelOfCares)
            </dd>
            <dt>
                @Html.EditorFor(x => x.LevelOfCares)
                @Html.ValidationMessageFor(m => m.LevelOfCares)
            </dt>
        </dl>

        <dl>
            <dd>
                @Html.LabelFor(x => x.Services)
            </dd>
            <dt>
                @Html.EditorFor(x => x.Services)
                @Html.ValidationMessageFor(m => m.Services)
            </dt>
        </dl>

        <dl>
            <dd>
                @Html.LabelFor(x => x.Forms_Sents)
            </dd>
            <dt>
                @Html.EditorFor(x => x.Forms_Sents)
                @Html.ValidationMessageFor(m => m.Forms_Sents)
            </dt>
        </dl>

        <dl>
            <dd>
                @(Html.Kendo().CheckBoxFor(x => x.active))
            </dd>
        </dl>

    </fieldset>

</div>

