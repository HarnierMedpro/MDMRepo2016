@model MDM.WebPortal.Models.FromDB.MDM_POS_Name_DBPOS_grp

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
    var POS = (SelectList)ViewBag.MDMPOS_ListNameID;
    var DB = (SelectList)ViewBag.DB_ID;
    var FAC = (SelectList)ViewBag.FacilityID;
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index","Home")"><i class="fa fa-home"></i> Home</a></li>
            <li><a href="@Url.Action("Index","Home")"> MDM_POS_Name_DBPOS_grp</a></li>            
            <li class="active">New</li>
        </ol>
    </div>
</header>

<div class="admin-container">
    <div class="row">
        <div class="col-md-offset-1 col-md-10">
            @if (!POS.Any() || !DB.Any() || !FAC.Any() || ViewBag.Error != null)
            {
                <div class="alert alert-danger">
                    <a href="#" class="close" data-dismiss="alert" aria-label="Close">&times;</a>
                    @if (!POS.Any())
	                    {
		                 <p>The MDM_POS_ListName table is empty.</p>
	                    }
                    @if (!DB.Any())
	                    {
		                 <p>The DBList table is empty.</p>
	                    }
                    @if (!FAC.Any())
                    {
                        <p>The POS_Tab table is empty.</p>
                    }
                   <p>@ViewBag.Error</p>
                </div>
            }
            <div class="panel panel-primary box-panel-admin">
                <div class="panel-heading">
                    <p class="text-uppercase text-bold">new</p>
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.MDMPOS_ListNameID, "MDMPOS_ListNameID", htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownList("MDMPOS_ListNameID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.MDMPOS_ListNameID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.DB_ID, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownList("DB_ID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.DB_ID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.FacilityID, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownList("FacilityID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.FacilityID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>
                                @*<div class="col-md-12">
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            @Html.LabelFor(model => model.Extra, htmlAttributes: new { @class = "control-label" })
                                            @Html.TextAreaFor(model => model.Extra, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Extra, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>*@
                            </div>

                            <div class="text-center">
                                <div class="form-group">
                                    <button id="btnCreate" type="submit" value="" class="btn btn-sm btn-primary"> Create</button>
                                    <a href="@Url.Action("Index")" class=" btn btn-sm btn-danger">
                                        <i class="fa fa-ban"></i> Cancel
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<link href="~/Content/lib/select2/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/lib/select2/select2.min.js"></script>
<script>
    $(document).ready(function () {
        var countPOS = @POS.Count();
        var countDB = @DB.Count();
        var countFAC = @FAC.Count();
        if (countPOS == 0 || countDB == 0 || countFAC == 0) {
            $('#btnCreate').prop('disabled',true);
        }
        else {
            $('#btnCreate').prop('disabled',false);
        }
        $('#FacilityID').select2();
        $('#MDMPOS_ListNameID').select2();
        $("#DB_ID").select2();        
    });

    //----------------------------Select DBs------------------------//

    $('#DB_ID').change(function() {
        var dB = $(this).val();
        $.ajax({
            type: "GET",
            url: "@Url.RouteUrl("GetFacilities")",
            data: { "DB_ID": dB },
            success: function(data) {
                $("#FacilityID").empty();
                $.each(data, function(index, value) {
                    $("#FacilityID").append($("<option></option>").val(value.Value).html(value.Value));
                });
            },
            error: function (xhr, ajaxOptions, thrwnError) {
                alert('Failed to retreive the Facilities.');
            }
        });
    });
</script>


