@using Kendo.Mvc.UI
@model MDM.WebPortal.Areas.Credentials.Models.ViewModel.VMLocationPOS_AddressInfo

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home", new {area = ""})"><i class="fa fa-home"></i> Home</a></li>
            <li><a href="@Url.Action("Index_MasterPOS", "MasterPOS", new {area = "Credentials"})"> LocationsPOS</a></li>
            <li class="active">Update</li>
        </ol>
    </div>
</header>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-1 col-md-10">
            @if (ViewBag.Error != null)
            {
                <div class="alert alert-danger">
                    <a href="#" class="close" data-dismiss="alert" aria-label="Close">&times;</a>
                    <p>@ViewBag.Error</p>
                </div>
            }

            @using (Html.BeginForm("Edit", "POSAddressInfo", FormMethod.Post, new { area = "PlaceOfServices" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.MasterPOSID)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-12">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border text-uppercase text-bold">time zone:</legend>
                            <div class="col-md-offset-1 col-md-10">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.DropDownList("Time_Zone", null, new { httmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Time_Zone, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>

                    <div class="col-md-12">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border text-uppercase text-bold">Payment Info:</legend>
                            <div class="col-md-offset-1 col-md-10">
                                <div class="form-horizontal">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Payment_Addr1, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Payment_Addr1, new { htmlAttributes = new { id = "payAdd1", @class = "form-control  form-control1" } })
                                            @Html.ValidationMessageFor(model => model.Payment_Addr1, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Payment_Addr2, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Payment_Addr2, new { htmlAttributes = new { @class = "form-control form-control1" } })
                                            @Html.ValidationMessageFor(model => model.Payment_Addr2, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Payment_City, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.Payment_City, new { htmlAttributes = new { id = "payCity", @class = "form-control form-control1" } })
                                                    @Html.ValidationMessageFor(model => model.Payment_City, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Payment_state, htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownList("Payment_state", null, new { httmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Payment_state, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Payment_Zip, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.Payment_Zip, new { htmlAttributes = new { id = "payZip", @class = "form-control form-control1" } })
                                                    @Html.ValidationMessageFor(model => model.Payment_Zip, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>

                    <div class="col-md-12">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border text-uppercase text-bold">Physical Info:</legend>
                            <div class="col-md-offset-1 col-md-10">
                                <div class="form-horizontal">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Physical_Addr1, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Physical_Addr1, new { htmlAttributes = new { id = "phyAdd1", @class = "form-control form-control1" } })
                                            @Html.ValidationMessageFor(model => model.Physical_Addr1, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Physical_Addr2, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Physical_Addr2, new { htmlAttributes = new { @class = "form-control form-control1" } })
                                            @Html.ValidationMessageFor(model => model.Physical_Addr2, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Physical_City, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.Physical_City, new { htmlAttributes = new { id = "phyCity", @class = "form-control form-control1" } })
                                                    @Html.ValidationMessageFor(model => model.Physical_City, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Physical_state, htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownList("Physical_state", null, new { httmlAttributes = new { @class = "form-control form-control1" } })
                                                    @Html.ValidationMessageFor(model => model.Physical_state, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-4">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Physical_Zip, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.Physical_Zip, new { htmlAttributes = new { id = "phyZip", @class = "form-control form-control1" } })
                                                    @Html.ValidationMessageFor(model => model.Physical_Zip, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>

                    <div class="col-md-12">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border text-uppercase text-bold">notes:</legend>
                            @*@(Html.Kendo().EditorFor(model => model.Notes)
                                    .PasteCleanup(p => p
                                    .All(false)
                                    .Css(false)
                                    .KeepNewLines(false)
                                    .MsAllFormatting(false)
                                    .MsConvertLists(true)
                                    .MsTags(true)
                                    .None(false)
                                    .Span(false)
                                    )
                             )*@
                            @Html.TextAreaFor(model => model.Notes, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                        </fieldset>
                    </div>

                </div>

                <div class="pull-right">
                    <div class="form-group">
                        <button type="submit" class="btn btn-sm btn-primary" onclick="return CheckRequired();">
                            <i class="fa fa fa-cloud-upload"> Save</i>
                        </button>

                        <a href="@Url.Action("Index_MasterPOS", "MasterPOS", new {area = "Credentials"})" class="btn btn-sm btn-danger">
                            <i class="fa fa-hand-o-left"></i> Cancel
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>

</div> 


<script src="~/Scripts/lib/inputmask/inputmask.js"></script>
<script src="~/Scripts/lib/inputmask/inputmask.numeric.extensions.js"></script>
<script src="~/Scripts/lib/inputmask/jquery.inputmask.js"></script>
<script src="~/Scripts/lib/Notify/notify.min.js"></script>

<script>
    $(document).ready(function() {
        $("#payZip").inputmask({ "mask": "99999" });
        $("#phyZip").inputmask({ "mask": "99999" });
    });

    function CheckRequired() {
        if ($.trim($('#payAdd1').val().length) == 0) {
            $('#payAdd1').notify("This field is required.", { position: "bottom left" });
            $('#payAdd1').focus();
            return false;
        }
        if ($.trim($('#payCity').val().length) == 0) {
            $('#payCity').notify("This field is required.", { position: "bottom left" });
            $('#payCity').focus();
            return false;
        }
        if ($.trim($('#payZip').val().length) == 0) {
            $('#payZip').notify("This field is required.", { position: "bottom left" });
            $('#payZip').focus();
            return false;
        }
        if ($.trim($('#phyAdd1').val().length) == 0) {
            $('#phyAdd1').notify("This field is required.", { position: "bottom left" });
            $('#phyAdd1').focus();
            return false;
        }
        if ($.trim($('#phyCity').val().length) == 0) {
            $('#phyCity').notify("This field is required.", { position: "bottom left" });
            $('#phyCity').focus();
            return false;
        }
        if ($.trim($('#phyZip').val().length) == 0) {
            $('#phyZip').notify("This field is required.", { position: "bottom left" });
            $('#phyZip').focus();
            return false;
        }
        else {
            return true;
        }
    }
</script>





