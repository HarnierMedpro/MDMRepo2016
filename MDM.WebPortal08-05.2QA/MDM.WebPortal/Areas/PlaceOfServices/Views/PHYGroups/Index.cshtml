@using System.Collections.Generic
@using Kendo.Mvc.UI
@using MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels

@model System.Collections.Generic.IEnumerable<MDM.WebPortal.Models.FromDB.PHYGroup>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home", new {area = ""})"><i class="fa fa-home"></i> Home</a></li>
            <li><a href="@Url.Action("Index", "LocationsPOS", new {area = "PlaceOfServices"})"> LocationsPOS</a></li>
            <li class="active">Physicians Group</li>
        </ol>
    </div>
</header>

@*/*See: C:\Users\hsuarez\Desktop\Documentation\Kendo UI for ASP.NET MVC5\ui-for-aspnet-mvc-examples-master\grid\multiselect-in-grid-popup*/*@

<script type="text/kendo" id="physicianTemplate">
    <ul>
        #for(var i = 0; i< data.length; i++){#
        <li>#:data[i].ProviderName#</li>
        #}#
    </ul>
</script>

<script type="text/javascript">
    var physicianTemplate = kendo.template($("#physicianTemplate").html(), { useWithBlock: false });
</script>

<div class="container-fluid">
    @(Html.Kendo().Grid<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMPHYGrp>()
  .Name("Grupos")
  .ToolBar(tools =>
  {
      tools.Create().Text("NEW GROUP");
      tools.Excel();
  })
  .Excel(e =>
  {
      e.AllPages(true);
      e.FileName("EXPORT_PHYGroups");
  })
  .Columns(column =>
  {
      column.Bound(x => x.PHYGrpID).Hidden();

      column.Bound(x => x.PHYGroupName).Width(110);

      column.Bound(x => x.PHYGrpNPI_Num).Width(110);

      column.Bound(e => e.Physicians).ClientTemplate("#=physicianTemplate(Physicians)#").Title("PHYSICIANS").Filterable(false).Sortable(false).Groupable(false).Width(110);

      column.Command(command =>
      {
          command.Edit();
      }).Title("ACTIONS").Width(110);
  })

  .Editable(editable => { editable.TemplateName("ProviderViewModelEditor"); editable.Mode(GridEditMode.PopUp); })
  .DataSource(datasource => datasource
    .Ajax()
    .ServerOperation(true)
    .PageSize(10)
    .Model(model =>
      {
       model.Id(x => x.PHYGrpID);
       model.Field(x => x.PHYGrpID).Editable(false);
       model.Field(e => e.Physicians).DefaultValue(new List<VMProvider>());
      })
    .Events(events => events.Error("error_handler"))
    .Read(read => read.Action("Read_Groups", "PHYGroups"))
    .Create(create => create.Action("Create_Groups", "PHYGroups"))
    .Update(update => update.Action("Update_Groups", "PHYGroups"))
  )
    )

</div>

<script>
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message
            alert(message);
            // Cancel the changes
            var grid = $("#Grupos").data("kendoGrid");
            grid.cancelChanges();
        }
    }
</script>