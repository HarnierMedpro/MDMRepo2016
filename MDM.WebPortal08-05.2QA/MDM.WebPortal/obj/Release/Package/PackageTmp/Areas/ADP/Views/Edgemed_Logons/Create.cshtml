@model MDM.WebPortal.Models.FromDB.Edgemed_Logons

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

@*<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.Hidden("Active", true)
    <div class="form-horizontal">
        <h4>Edgemed_Logons</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
            @Html.LabelFor(model => model.id, "id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                <input id="tbAdp" name="id" type="text" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edgemed_UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Edgemed_UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Edgemed_UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Zno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EdgeMed_ID, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.EdgeMed_ID, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EdgeMed_ID, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@
<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home", new {area = ""})"><i class="fa fa-home"></i> Home</a></li>
            <li><a href="@Url.Action("Index", "Edgemed_Logons", new { area = "ADP" })"> Edgemed_Logons</a></li>
            <li class="active"> NEW</li>
        </ol>
    </div>
</header>

<div class="container">
    @if (ViewBag.Error != null)
    {
        <div class="row">
        <div class="col-md-5">
            <div class="alert alert-danger">
                <a href="#" class="close" data-dismiss="alert" aria-label="Close">&times;</a>
                <p>@ViewBag.Error</p>
            </div>
        </div>
        </div>
    }
    <div class="panel panel-primary box-panel-admin">
        <div class="panel-heading">
            <p class="text-uppercase text-bold">new edgemed_logons</p>
        </div>
        <div class="panel-body">
            @using (Html.BeginForm("Create", "Edgemed_Logons", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                @Html.Hidden("Active", true)

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    <div class="form-group">
                        <div id="divCpt" class="col-md-offset-1 col-md-10">
                            <label class="control-label">EMPLOYEE <sup class="text-danger">*</sup></label>
                            <input id="tbAdp" name="id" type="text" class="form-control"/>
                            @Html.ValidationMessageFor(model => model.ADPMasterID, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            <label class="control-label">EDGEMED USERNAME <sup class="text-danger">*</sup></label>
                            @Html.EditorFor(model => model.Edgemed_UserName, new {htmlAttributes = new {id = "tb_EUsername", @class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Edgemed_UserName, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            <label class="control-label">ZOOM SERVER <sup class="text-danger">*</sup></label>
                            @Html.EditorFor(model => model.Zno, new {htmlAttributes = new {id = "tb_Zoom", @class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Zno, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            <label class="control-label">EDGEMED ID <sup class="text-danger">*</sup></label>
                            @Html.EditorFor(model => model.EdgeMed_ID, new {htmlAttributes = new {id = "tb_EId", @class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.EdgeMed_ID, "", new {@class = "text-danger"})
                        </div>
                    </div>


                    <div class="text-center">
                        <div class="form-group">
                            <button id="btnCreate" type="submit" value="" class="btn btn-ar btn-primary" onclick="return CheckRequired();">Create</button>
                            <a href="@Url.Action("Index")" class="btn btn-ar btn-danger"> Cancel</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<link href="~/Content/themes/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.11.4.js"></script>
<script src="~/Scripts/lib/Notify/notify.min.js"></script>
<script>
    var domainName = "http://" + window.location.host.toString();
    $(function autocompleteAdp() {
        $("#tbAdp").autocomplete({
            minLength: 3,
            source: function (request, response) {
                var term = request.term;
                $.ajax({
                    //url: domainName + 'ADP/Edgemed_Logons/GetAdps',
                    url: "@(Url.RouteUrl("GetAdps"))",
                    data: { text: term },
                    success: function (data) {
                        if (data.length > 0) {
                            response($.map(data, function (item, index) {
                                return {
                                    value: item.id,
                                    label: item.ADP_ID + " " + item.LName + "," + " " + item.FName
                                }
                            }));
                            $('#btnCreate').prop("disabled", false);
                        } else {
                            $("#tbAdp").notify("Employee not found. Try again!", { position: "bottom left", className: 'error' });
                            $('#btnCreate').prop("disabled", true);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrwnError) {
                        $("#tbAdp").notify("Employee not found. Try again!",
                            {
                                position: "bottom left",
                                className: 'error'
                            }
                          );
                    }
                });
            }
        });
    });

    function CheckRequired() {
        if ($.trim($('#tbAdp').val()).length === 0) {
            $('#tbAdp').notify("This field is required.", { position: "bottom left" });
            return false;
        }
        if ($.trim($('#tb_EUsername').val()).length === 0) {
            $('#tb_EUsername').notify("This field is required.", { position: "bottom left" });
            return false;
        }
        if ($.trim($('#tb_Zoom').val()).length === 0) {
            $('#tb_Zoom').notify("This field is required.", { position: "bottom left" });
            return false;
        }
        else if ($.trim($('#tb_Zoom').val()).length === 1 && $('#tb_Zoom').val() == 0) {
            $('#tb_Zoom').notify("The value needs to be greater than zero.", { position: "bottom left" });
            //alert($('#tb_Zoom').val());
            return false;
        }
        if ($.trim($('#tb_EId').val()).length === 0) {
            $('#tb_EId').notify("This field is required.", { position: "bottom left" });
            return false;
        }
        else if ($.trim($('#tb_EId').val()).length === 1 && $('#tb_EId').val() == 0) {
            $('#tb_EId').notify("The value needs to be greater than zero.", { position: "bottom left" });
            return false;
        } else {
            return true;
        }
    }
</script>