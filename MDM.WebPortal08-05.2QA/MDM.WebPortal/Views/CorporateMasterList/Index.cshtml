@{
    ViewBag.Title = "Index";
    
}


<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index","Home", new {area=""})"><i class="fa fa-home"></i> Home</a></li>
            <li class="active">Corporate</li>
        </ol>
    </div>
</header>

<div class="container-fluid">   

    @(Html.Kendo().Grid<MDM.WebPortal.Models.ViewModel.VMCorporateMasterLists>()
      .Name("gridCorporate")
      .Columns(columns =>
      {
          columns.Bound(c => c.CorporateName).Title("NAME").Width(300);
          
          columns.Bound(c => c.active).Title("ACTIVE").Width(300);

          columns.Command(commands => commands.Edit()).Title("COMMANDS").Width(200);
      })

      .Filterable()      
      .Pageable(ps => ps.Refresh(true)
      .PreviousNext(true).PageSizes(true))
      .Sortable()
      .Groupable()
      .ClientDetailTemplateId("template")
      .Reorderable(r => r.Columns(true))
      .Resizable(r => r.Columns(true))
      //.Selectable(s => s.Enabled(true)
      //.Type(GridSelectionType.Row)
      //.Mode(GridSelectionMode.Single))

      .DataSource(dataSource => dataSource
          .Ajax()         
          .ServerOperation(true)
          .PageSize(10)
          .Model(model =>
            {
                model.Id(x => x.corpID); // Specify the property which is the unique identifier of the model
                model.Field(x => x.corpID).Editable(false); // Make the ProductID property not editable
                model.Field(x => x.CorporateName).Editable(true);
                
            })
          .Events(events => events.Error("error_handler")) 
          .Read(read => read.Action("CorporateMasterLists_Read", "CorporateMasterList"))
          .Update(update => update.Action("CorporateMasterLists_Update", "CorporateMasterList"))
          .Create(create => create.Action("CorporateMasterLists_Create", "CorporateMasterList"))
      )

    .ToolBar(tool => { tool.Create().Text("NEW CORPORATE"); tool.Excel(); })
    .Excel(e => e.AllPages(true))
    )
</div>


<script src="~/Scripts/kendo/jszip.min.js"></script>
<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<MDM.WebPortal.Models.ViewModel.VMDBList>()
    .Name("gridDB_#=corpID#") // template expression, to be evaluated in the master context
            .Columns(columns =>
            {
                columns.Bound(o => o.DB_ID).Hidden(true);
                columns.Bound(o => o.DB).Title("DB").Width(110);
                columns.Bound(o => o.databaseName).Title("NAME").Width(110); ; // escaped template expression, to be evaluated in the child/detail context
                columns.Bound(o => o.active).Width(110).Title("ACTIVE");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Read(read => read.Action("HierarchyBinding_DBs", "CorporateMasterList", new { corpID = "#=corpID#" }))
            )
            .Pageable()
            .Sortable()
            .ToClientTemplate()
    )

    @(Html.Kendo().Grid<MDM.WebPortal.Models.ViewModel.VMOwnerList>()
    .Name("gridOwner_#=corpID#") // template expression, to be evaluated in the master context
            .Columns(columns =>
            {
                //columns.Bound(o => o.OwnersID).Title("ID").Width(110);
                columns.Bound(o => o.LastName).Title("OWNER LAST NAME").Width(110);
                columns.Bound(o => o.FirstName).Title("OWNER FIRST NAME").Width(110); ; // escaped template expression, to be evaluated in the child/detail context
                columns.Bound(o => o.active).Width(110).Title("ACTIVE");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                        .Read(read => read.Action("HierarchyBinding_Owner", "CorporateMasterList", new { corpID = "#=corpID#" }))
            )
            .Pageable()
            .Sortable()
            .ToClientTemplate()
    )
</script>
<script>
    function dataBound() {
        this.expandRow(this.tbody.find("tr.k-master-row").first());
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message
            alert(message);
            // Cancel the changes
            var grid = $("#gridCorporate").data("kendoGrid");
            grid.cancelChanges();
        }
    }
</script>