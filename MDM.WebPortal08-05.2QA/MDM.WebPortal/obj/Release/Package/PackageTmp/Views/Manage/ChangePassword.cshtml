@model IdentitySample.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index","Home")"> <i class="fa fa-home"></i> HOME</a></li>
            <li class="active">Change Password</li>
        </ol>
    </div>
</header>

<div class="admin-container">
    <div class="row">
        <div class="col-md-offset-2 col-md-8">
           
            <div class="panel panel-primary">
                <div class="panel-heading"><i class="fa fa-lock"></i> <strong>CHANGE PASSWORD FORM</strong></div>
                <div class="panel-body">
                    @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        
                           <!--TempData["UserID"] it's pass from Account/ConfirmEmail to Manage/ChangePassword-->
                            if (TempData["UserID"] != null)
                            {
                                @Html.Hidden("UserID", TempData["UserID"])
                            }
                        <hr />
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        <div class="form-group">                           
                            <label class="col-md-3 control-label">Current Password <sup class="text-danger">*</sup></label>
                            <div class="col-md-9">
                                @Html.PasswordFor(m => m.OldPassword, new {id="tboldPass", @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">New Password <sup class="text-danger">*</sup></label>
                            <div class="col-md-9">
                                @Html.PasswordFor(m => m.NewPassword, new { id = "tbPass", @class = "form-control" })
                                <meter min="0" max="4" id="password-strength-meter"></meter>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.PasswordFor(m => m.ConfirmPassword, new {id="tbConfirm", @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-9">
                                <input id="btn-Register" type="submit" value="Change password" class="btn btn-primary" onclick="return CheckRequired();" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>   
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<link href="~/Content/lib/Popover/Popover.css" rel="stylesheet" />
<link href="~/Content/lib/PwdMeter/zxcvbn.css" rel="stylesheet" />

<script src="~/Scripts/lib/Popover/Popover.js"></script>
<script src="~/Scripts/lib/PwdMeter/zxcvbn.js"></script>
<script src="~/Scripts/lib/Notify/notify.min.js"></script>
<script>
    $(function () {
        $('[data-toggle="popover"]').popover()
    });
    $(document).ready(function () {
        $("#tbPass").popover({
            html: true,
            content: '<ul><li>At least 6 characters</li><li>Include all of these elements:<ol><li>One UPPER CASE letter</li><li>One lower case letter</li><li>One special character</li><li>One number</li></ol></li></ul>',
            toggle: "popover",
            title: '<strong>Secure Password</strong>',
            container: "body",
            trigger: "focus",
            tabindex: "0",
            role: "password-input",
            placement: "top"
        });       
    });


    var strength = {
        0: "Worst",
        1: "Bad",
        2: "Weak",
        3: "Good",
        4: "Strong"
    }

    var password = document.getElementById('tbPass');
    var meter = document.getElementById('password-strength-meter');

    password.addEventListener('input', function () {
        var val = password.value;
        var result = zxcvbn(val);


        meter.value = result.score;
        if (val !== "") {
            if (result.score == 4) {
                $('#btn-Register').prop('disabled', false);
            }
            else {
                $('#btn-Register').prop('disabled', true);
            }
        }
    });

    function CheckRequired() {
        if ($.trim($('#tboldPass').val()).length == 0) {
            $('#tboldPass').notify("You must provide your current password", { position: "bottom left" });
            $('#tboldPass').focus();
            return false;
        }
        if ($.trim($('#tbPass').val()).length == 0) {
            $('#tbPass').notify("You must provide your new password", { position: "bottom left" });
            $('#tbPass').focus();
            return false;
        }
        if ($.trim($('#tbConfirm').val()).length == 0) {
            $('#tbConfirm').notify("You must provide your new password", { position: "bottom left" });
            $('#tbConfirm').focus();
            return false;
        }
        if ($.trim($('#tboldPass').val().length) > 0 && $.trim($('#tbPass').val().length) > 0 && $.trim($('#tbConfirm').val().length) > 0 && ($.trim($('#tbPass').val().length) != $.trim($('#tbConfirm').val().length) || $.trim($('#tbPass').val()) != $.trim($('#tbConfirm').val()))) {
            $('#tbConfirm').notify("Password and confirmation do not match.", { position: "bottom left" });
            $('#tbConfirm').focus();
            return false;
        }
        else {
            return true;
        }
    }
</script>
