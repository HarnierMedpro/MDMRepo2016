@using System.Collections.Generic
@using Kendo.Mvc.UI
@model IEnumerable<MDM.WebPortal.Models.FromDB.Manager_Master>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}


<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home", new {area = ""})"><i class="fa fa-home"></i> Home</a></li>
            <li class="active">Manager_Master</li>
        </ol>
    </div>
</header>

<div class="container-fluid">
    @(Html.Kendo().Grid<MDM.WebPortal.Areas.ManagerDBA.Models.ViewModels.VMManager_Master>()
          .Name("Manager")
          .ToolBar(tools =>
          {
              tools.Excel();
              tools.Create().Text("NEW MANAGER");
          })
          .Excel(e =>
          {
              e.AllPages(true);
              e.FileName("Export_Managers");
          })
          .Columns(columns =>
          {
              columns.Bound(x => x.ManagerID).Hidden(true); //PK
              
              columns.Bound(x => x.AliasName).Width(110);
              
              columns.ForeignKey(x => x.ManagerTypeID, (System.Collections.IEnumerable) ViewData["Type"], "ManagerTypeID", "Name").Title("CLASSIFICATION").Width(110);
              //columns.Bound(x => x.ManagerTypeID).Width(110).EditorTemplateName("Available_Manager_Type");

              columns.Bound(x => x.Active).Width(110);

              columns.Command(command =>
              {
                  command.Edit();
              }).Title("COMMANDS").Width(110);
          })

          .DataSource(dataSource => dataSource
              .Ajax()
              .PageSize(10)
              .Model(model =>
              {
                  model.Id(x => x.ManagerID);
                  model.Field(x => x.ManagerID).Editable(false);
              })
              .Events(events => events.Error("error_handler"))
              .Read(read => read.Action("Read_Manager", "Manager_Master"))
              .Update(update => update.Action("Update_Manager", "Manager_Master"))
              .Create(create => create.Action("Create_Manager", "Manager_Master"))
          )

          .Sortable()
          .Filterable()
          .Pageable(ps => ps.Refresh(true)
              .PreviousNext(true).PageSizes(true))
          .Groupable()
          //Cuando aprenda como pasar propiedades de un modelo para un template sere capaz de mostrar solo los elementos que estan disponibles
          //.Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Available_Manager_Type"))
          .Reorderable(r => r.Columns(true))
          .Resizable(r => r.Columns(true))
          .Selectable(s => s.Enabled(true)
              .Type(GridSelectionType.Row)
              .Mode(GridSelectionMode.Single)))
</div>

<script src="~/Scripts/kendo/jszip.min.js"></script>
<script>
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message
            alert(message);
            // Cancel the changes
            var grid = $("#Manager").data("kendoGrid");
            grid.cancelChanges();
        }
    }
</script>