@using System.Collections
@using Kendo.Mvc.UI
@using MDM.WebPortal.Models.FromDB

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<header class="main-header">
    <div class="container">
        <h1 class="page-title"></h1>
        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home", new {area = ""})"><i class="fa fa-home"></i> Home</a></li>
            <li class="active">LocationsPOS</li>
        </ol>
    </div>
</header>

<div class="container-fluid">
    @if (TempData["Error"] != null)
    {
        <div class="row">
            <div class="col-md-5">
                <div class="alert alert-danger">
                    <a href="#" class="close" data-dismiss="alert" aria-label="Close">&times;</a>
                    <p>@TempData["Error"]</p>
                </div>
            </div>
        </div>
    }
    @(Html.Kendo().Grid<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMLocationsPOS>()
          .Name("POSLOC")
          .ToolBar(tool => tool.Excel())
          .Columns(column =>
          {
              column.Bound(pos => pos.Facitity_DBs_IDPK).Hidden(true);

              column.Bound(pos => pos.PosName).Width(110);

              column.ForeignKey(pos => pos.FvPList_FvPID, (IEnumerable<MDM.WebPortal.Models.ViewModel.Delete.VMFvpList>) ViewData["FvPLists"], "id", "FvpName").Width(110);

              column.Bound(pos => pos.TaxID).Width(110);

              column.Bound(pos => pos.DBA_Name).Width(110);

              column.Bound(pos => pos.POSFAC_Manager).Width(110);

              column.Command(command =>
              {
                  command.Edit();
              }).Title("ACTIONS").Width(110);
          })
          .DataSource(datasource => datasource
              .Ajax()
              .ServerOperation(true)
              .PageSize(10)
              .Model(model =>
              {
                  model.Id(pos => pos.Facitity_DBs_IDPK);
                  model.Field(pos => pos.Facitity_DBs_IDPK).Editable(false);
              })
              .Events(events => events.Error("error_handler"))
              .Read(read => read.Action("Read_LocationPOS", "LocationsPOS"))
              .Update(update => update.Action("Update_LocationPOS", "LocationsPOS"))
          )

          .ClientDetailTemplateId("template")
          )
</div>

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().TabStrip()
          .Name("tabStrip_#=Facitity_DBs_IDPK#")
          .SelectedIndex(0)
          .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
          .Items(items =>
          {
              items.Add().Text("Address Info")
                  .LoadContentFrom("Details", "POSAddressInfo", new { id = "#=Facitity_DBs_IDPK#", area = "PlaceOfServices" });
                  //.Action("Edit", "POSAddressInfo", new {id = "#=Facitity_DBs_IDPK#", area = "PlaceOfServices"});
              
              items.Add().Text("Additional Info")
                  .LoadContentFrom("Details", "FACInfoDatas", new { id = "#=Facitity_DBs_IDPK#", area = "PlaceOfServices" });

              items.Add().Text("Physician Group")
                 .LoadContentFrom("Details", "PHYGroups", new { locationPOSID = "#=Facitity_DBs_IDPK#", area = "PlaceOfServices" });  
              
              items.Add().Text("Level Of Care").Content(@<text>
                    @(Html.Kendo().Grid<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMLocPOS_LevOfCare>()
                          .Name("grid_#=Facitity_DBs_IDPK#") // template expression, to be evaluated in the master context
                          .ToolBar(tool =>
                          {
                              tool.Create().Text("NEW LEVEL OF CARE");
                          })
                          .Columns(columns =>
                          {
                              columns.Bound(o => o.LocPosLocID).Hidden(true);
                              columns.Bound(o => o.LocationsPOS_Facitity_DBs_IDPK).Hidden(true);
                              columns.ForeignKey(o => o.Lev_of_Care_LevOfCareID, (IEnumerable<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMLevelOfCare>) ViewData["LevOfCare"], "LevOfCareID", "LevOfCareName").Width(110);
                              
                              columns.Command(command =>
                              {
                                  command.Edit();
                              }).Title("ACTIONS").Width(110);
                          })
                          .DataSource(dataSource => dataSource
                              .Ajax()
                              .PageSize(5)
                              .Model(model =>
                              {
                                  model.Id(x => x.LocPosLocID);
                                  model.Field(x => x.LocPosLocID).Editable(false);
                                  model.Field(x => x.LocationsPOS_Facitity_DBs_IDPK).Editable(false);
                              })
                              .Events(events => events.Error("error_handler"))
                              .Read(read => read.Action("Read_LevelsOfCareByLocPOS", "LocationsPOS", new {locPOSID = "#=Facitity_DBs_IDPK#"}))
                              .Update(update => update.Action("Update_POS_LOfCare", "LocPOS_LevOfCare"))
                              /*The fact that I was using 'LocationsPOS_Facitity_DBs_IDPK' as my route variable and it was the problem. It was trying to use the 'LocationsPOS_Facitity_DBs_IDPK' of the new row,
                               * which of course was 0. * Changing the name of the route variable to 'ParentID' fixed the problem.*/
                              .Create(create => create.Action("Create_POS_LOfCare", "LocPOS_LevOfCare", new { ParentID = "#=Facitity_DBs_IDPK#" }))
                          )
                          .Pageable()
                          .Sortable()
                          .ToClientTemplate())
                </text>
                  );

              items.Add().Text("Services").Content(@<text>
                    @(Html.Kendo().Grid<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMLocPOS_MPServ>()
                          .Name("gridService_#=Facitity_DBs_IDPK#") // template expression, to be evaluated in the master context
                          .ToolBar(tool =>
                          {
                              tool.Create().Text("NEW SERVICE");
                          })
                          .Columns(columns =>
                          {
                              columns.Bound(o => o.LocPosMPServID).Hidden(true);
                              columns.Bound(o => o.LocationsPOS_Facitity_DBs_IDPK).Hidden(true);
                              columns.ForeignKey(o => o.MPServices_MPServID, (IEnumerable<MDM.WebPortal.Areas.PlaceOfServices.Models.ViewModels.VMMPService>)ViewData["Service"], "MPServID", "ServName").Width(110);
                             
                              columns.Command(command =>
                              {
                                  command.Edit();
                              }).Title("ACTIONS").Width(110);
                          })
                          .DataSource(dataSource => dataSource
                              .Ajax()
                              .PageSize(5)
                              .Model(model =>
                              {
                                  model.Id(x => x.LocPosMPServID);
                                  model.Field(x => x.LocPosMPServID).Editable(false);
                                  model.Field(x => x.LocationsPOS_Facitity_DBs_IDPK).Editable(false);
                              })
                              .Events(events => events.Error("error_handler"))
                              .Read(read => read.Action("Read_ServicesByLocPOS", "LocationsPOS", new { locPOSID = "#=Facitity_DBs_IDPK#" }))
                              .Update(update => update.Action("Update_POSService", "LocPOS_MPServ"))
                              /*The fact that I was using 'LocationsPOS_Facitity_DBs_IDPK' as my route variable and it was the problem. It was trying to use the 'LocationsPOS_Facitity_DBs_IDPK' of the new row,
                               * which of course was 0. * Changing the name of the route variable to 'ParentID' fixed the problem.*/
                              .Create(create => create.Action("Create_POSService", "LocPOS_MPServ", new { ParentID = "#=Facitity_DBs_IDPK#" }))
                          )
                          
                          .Sortable()
                          .ToClientTemplate())
            </text>
                  );
              //items.Add().Text("Contact Information").Content(
              //    "<div class='employee-details'>" +
              //        "<ul>" +
              //            "<li><label>Country:</label>#= Country #</li>" +
              //            "<li><label>City:</label>#= City #</li>" +
              //            "<li><label>Address:</label>#= Address #</li>" +
              //            "<li><label>Home Phone:</label>#= HomePhone #</li>" +
              //        "</ul>" +
              //    "</div>"
              //);
          })
        .ToClientTemplate())
</script>

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message
            alert(message);
            // Cancel the changes
            var grid = $("#POSLOC").data("kendoGrid");
            grid.cancelChanges();

            var grid1 = $("#grid_").data("kendoGrid");
            grid1.cancelChanges();
        }
    }
</script>